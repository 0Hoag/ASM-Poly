package com.poly.asm.exception;

import org.springframework.http.HttpStatus;
import org.springframework.http.HttpStatusCode;

import lombok.Getter;

@Getter
public enum ErrorCode {
	UNCATEGORIZE_EXCEPTION(9999, "UNCATEGORIZE_EXCEPTION", HttpStatus.INTERNAL_SERVER_ERROR),
    INVALID_KEY(1001, "INVALID MESSAGE KEY", HttpStatus.BAD_REQUEST),
    USER_EXITSTED(1002, "USER EXITED", HttpStatus.BAD_REQUEST),
    EMAIL_EXITSTED(1002, "EMAIL EXITED", HttpStatus.BAD_REQUEST),
    SELECTED_PRODUCT_NOT_EXISTED(1003, "SELECTED_PRODUCT_NOT_EXISTED", HttpStatus.BAD_REQUEST),
    USERNAME_INVALID(1004, "USERNAME MUST AT LEAST BE {min} CHARACTER", HttpStatus.BAD_REQUEST),
    INVALID_PASSWORD(1005, "PASSWORD MUST BE AT LEAST {min} CHARACTER", HttpStatus.BAD_REQUEST),
    USER_NOT_EXISTED(1006, "USER NOT EXISTED", HttpStatus.NOT_FOUND),
    USER_NOT_FOUND(1007, "USER NOT FOUND", HttpStatus.NOT_FOUND),  
    PASSWORD_INCORRECT(1008, "PASSWORD INCORRECT", HttpStatus.BAD_REQUEST), 
    UNAUTHENTICATED(1009, "UNAUTHENTICATED", HttpStatus.UNAUTHORIZED),
    UNAUTHORIZE(1010, "YOU DO NOT HAVE PERMISSION", HttpStatus.FORBIDDEN),
    INVALID_DOB(1011, "YOU MUST BE AT LEAST {min} YEARS OLD", HttpStatus.BAD_REQUEST),
    PASSWORD_EXISTED(1012, "PASSWORD ALREADY EXISTS", HttpStatus.BAD_REQUEST),
    PERMISSION_NOT_FOUND(1013, "PERMISSION NOT FOUND", HttpStatus.BAD_REQUEST),
    CART_ITEM_EXISTED(1014, "CART ITEM ALREADY EXISTS", HttpStatus.BAD_REQUEST),
    ORDERS_NOT_EXISTED(1015, "ORDERS NOT EXISTED", HttpStatus.BAD_REQUEST),
    IMAGE_NOT_EXISTED(1016, "IMAGE NOT EXISTED", HttpStatus.BAD_REQUEST),

    UPLOAD_FILE_FAIL(1017, "UPLOAD FILE FAILED", HttpStatus.BAD_REQUEST),
    REMOVE_FILE_FAIL(1018, "REMOVE FILE FAILED", HttpStatus.BAD_REQUEST),

    MISSING_INPUT(8888, "MISSING INPUT", HttpStatus.BAD_REQUEST),
    CATEGORIES_NOT_EXISTED(1019, "CATEGORIES NOT EXISTED", HttpStatus.BAD_REQUEST),
    CATEGORIES_EXISTED(1020, "CATEGORIES EXISTED", HttpStatus.BAD_REQUEST),
    CATEGORIES_NAME_EXISTED(1021, "CATEGORIES NAME ALREADY EXISTS", HttpStatus.CONFLICT),

    PRODUCT_NOT_EXISTED(1022, "PRODUCT NOT EXISTED", HttpStatus.BAD_REQUEST),
    PRODUCT_EXISTED(1023, "PRODUCT EXISTED", HttpStatus.BAD_REQUEST),
    PRODUCT_NAME_EXISTED(1024, "PRODUCT NAME ALREADY EXISTS", HttpStatus.CONFLICT),

    PRODUCT_TYPE_NOT_EXISTED(1025, "PRODUCT TYPE NOT EXISTED", HttpStatus.BAD_REQUEST),
    PRODUCT_TYPE_EXISTED(1026, "PRODUCT TYPE EXISTED", HttpStatus.BAD_REQUEST),
    PRODUCT_TYPE_NAME_EXISTED(1027, "PRODUCT TYPE NAME ALREADY EXISTS", HttpStatus.CONFLICT),

    SPECIFICATION_TYPE_NOT_EXISTED(1028, "SPECIFICATION TYPE NOT EXISTED", HttpStatus.BAD_REQUEST),
    SPECIFICATION_TYPE_EXISTED(1029, "SPECIFICATION TYPE EXISTED", HttpStatus.BAD_REQUEST),
    SPECIFICATION_TYPE_NAME_EXISTED(1030, "SPECIFICATION TYPE NAME ALREADY EXISTS", HttpStatus.CONFLICT),

    CART_NOT_EXISTED(1031, "CART NOT EXISTED", HttpStatus.BAD_REQUEST),
    CART_EXISTED(1032, "CART EXISTED", HttpStatus.BAD_REQUEST),
    CART_NAME_EXISTED(1033, "CART NAME ALREADY EXISTS", HttpStatus.CONFLICT),

    CART_DETAIL_NOT_EXISTED(1034, "CART DETAIL NOT EXISTED", HttpStatus.BAD_REQUEST),
    CART_DETAIL_EXISTED(1035, "CART DETAIL EXISTED", HttpStatus.BAD_REQUEST),
    CART_DETAIL_NAME_EXISTED(1036, "CART DETAIL NAME ALREADY EXISTS", HttpStatus.CONFLICT),
    
    ADDRESS_NOT_EXISTED(1037, "ADDRESS NOT EXISTED", HttpStatus.BAD_REQUEST),
    
	EMAIL_OR_PHONE_REQUIRED(1040, "EMAIL OR PHONE NUMBER CANNOT BE EMPTY", HttpStatus.BAD_REQUEST),
	ACCOUNT_OR_PASSWORD_EMPTY(1050, "ACCOUNT OR PASSWORD CANNOT BE EMPTY", HttpStatus.BAD_REQUEST);

    private int code;
    private String message;
    private HttpStatusCode statusCode;

    ErrorCode(int code, String message, HttpStatusCode statusCode) {
        this.code = code;
        this.message = message;
        this.statusCode = statusCode;
    }

    ErrorCode() {}
}
